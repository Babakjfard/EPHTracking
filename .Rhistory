library(tidyverse)
setwd('/Users/babak.jfard/windows_Files/structure/intel_core_i5/src')
heat_mort <- read_csv('../data/interim/heat_related.csv')
View(heat_mort)
# 1) Get the standard 3108 counties
counties <- read_csv('/Users/babak.jfard/projects/Datasets/US_counties/county_centroids.csv')
View(counties)
View(counties)
heat_mort <- heat_mort %>% filter(County_FIPS %in% counties$GEOID)
# 2) Aggregate based on (county, year, sex, race, age_group, code)
head(heat_mort)
# 2) Aggregate based on (county, year, sex, race, age_group, code)
names(heat_mort)
View(heat_mort)
View(heat_mort)
# 2) Aggregate based on (county, year, sex, race, age_group, code)
test_csv <- read_csv('../data/interim/diirect_heat/csv/heat_2008.csv')
View(test_csv)
# this is the second step after extracting heat related mortality from the files
# using python. The considered ICD codes were (T67, X30, X32, E80)
setwd('/Users/babak.jfard/windows_Files/structure/intel_core_i5/src')
heat_mort <- read_csv('../data/interim/heat_related.csv')
View(heat_mort)
# 1) Get the standard 3108 counties
counties <- read_csv('/Users/babak.jfard/projects/Datasets/US_counties/county_centroids.csv')
heat_mort <- heat_mort %>% filter(County_FIPS %in% counties$GEOID)
heat_mort <- read_csv('../data/interim/heat_related.csv')
heat_mort <- heat_mort %>% filter(County_FIPS %in% counties$GEOID)
names(heat_mort)
colSums(is.na(heat_mort))
heat_mort <- read_csv('../data/interim/heat_related.csv') %>%
select(-c('Pop_Size_County_Occurrence', 'Residence_County_Metro_Nonmetro',
'Age_Detail', 'Death_dayofWeek', 'Conditions_No_EntityAxis'))
View(heat_mort)
heat_mort[heat_mort$Age_Recode27==27]
heat_mort[heat_mort$Age_Recode27==27,]
notknown <- heat_mort[heat_mort$Age_Recode27==27,]
View(notknown)
heat_mort <- read_csv('../data/interim/heat_related.csv') %>%
select(-c('Pop_Size_County_Occurrence', 'Residence_County_Metro_Nonmetro',
'Death_dayofWeek', 'Conditions_No_EntityAxis'))
# 1) Get the standard 3108 counties
counties <- read_csv('/Users/babak.jfard/projects/Datasets/US_counties/county_centroids.csv')
heat_mort <- heat_mort %>% filter(County_FIPS %in% counties$GEOID)
heat_mort <- heat_mort %>% filter(County_FIPS %in% counties$GEOID)
View(notknown)
heat_mort <- read_csv('../data/interim/heat_related.csv') %>%
select(-c('Pop_Size_County_Occurrence', 'Residence_County_Metro_Nonmetro',
'Death_dayofWeek', 'Conditions_No_EntityAxis'))
# 1) Get the standard 3108 counties
counties <- read_csv('/Users/babak.jfard/projects/Datasets/US_counties/county_centroids.csv')
heat_mort <- heat_mort %>% filter(County_FIPS %in% counties$GEOID)
notknown <- heat_mort[heat_mort$Age_Recode27==27,]
View(notknown)
heat_mort <- read_csv('../data/interim/heat_related.csv') %>%
select(-c('Pop_Size_County_Occurrence', 'Residence_County_Metro_Nonmetro',
'Age_Detail', 'Death_dayofWeek', 'Conditions_No_EntityAxis'))
# 1) Get the standard 3108 counties
counties <- read_csv('/Users/babak.jfard/projects/Datasets/US_counties/county_centroids.csv')
heat_mort <- heat_mort %>% filter(County_FIPS %in% counties$GEOID)
# 2) Regrouping Age into three categories:
# 1: 0-5 years
# 2: 5 - 65 years
# 3: > 65
heat_mort <- heat_mort %>% filter(Age_Recode27 != 27)
heat_mort$Age_Recode27[heat_mort$Age_Recode27 < 7] <- 1
heat_mort$Age_Recode27[heat_mort$Age_Recode27 > 6 & heat_mort$Age_Recode27 < 19] <- 2
heat_mort$Age_Recode27[heat_mort$Age_Recode27 > 18] <- 3
names(heat_mort)
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by([1] "County_FIPS", "Death_Month", "Sex",
"Age_Recode27","Year_CurrentData",
"DeathCause_ICD","Race_Recode3" )
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by("County_FIPS", "Death_Month", "Sex",
"Age_Recode27","Year_CurrentData",
"DeathCause_ICD","Race_Recode3" ) %>%
summarise(Total = n())
View(mort_heat)
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by("County_FIPS","Sex",
"Age_Recode27","Year_CurrentData",
"DeathCause_ICD","Race_Recode3" ) %>%
summarise(Total = n())
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by(c("County_FIPS","Sex",
"Age_Recode27","Year_CurrentData",
"DeathCause_ICD","Race_Recode3" )) %>%
summarise(Total = n())
names(heat_mort)
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by(c(County_FIPS, Sex, Age_Recode27, Year_CurrentData,
DeathCause_ICD, Race_Recode3)) %>%
summarise(Total = n())
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by(c(County_FIPS, Year_CurrentData,
DeathCause_ICD, Age_Recode27)) %>%
summarise(Total = n())
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by(c(County_FIPS, Year_CurrentData,
DeathCause_ICD, Age_Recode27)) %>%
summarise(Total = n(.))
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by(c(County_FIPS, Year_CurrentData,
DeathCause_ICD, Age_Recode27)) %>%
summarise(Total = mean(Age_Recode27))
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by(c(County_FIPS, Year_CurrentData,
DeathCause_ICD, Age_Recode27))
View(heat_mort)
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by(c(County_FIPS, Year_CurrentData)) %>%
summarise(Total = n())
# 2) Aggregate based on (county, year, sex, race, age_group, code)
mort_heat <- heat_mort %>% group_by(c(County_FIPS, Year_CurrentData)) %>%
summarise(Total = n(County_FIPS))
heat_mort %>% group_by(County_FIPS) %>% summarise(total=n())
Total_county <- heat_mort %>% group_by(County_FIPS) %>% summarise(total=n())
View(Total_county)
sum(Total_county$total)
write_csv(heat_mort, '../data/processed/heat_3Age_groups.csv')
install.packages("ggiraph")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, ggplot2, ggiraph)
library(tidyverse, ggplot2, ggiraph, sf)
library(sf)
library(tidyverse, ggplot2, ggiraph, sf)
library(tidyverse, ggplot2, ggiraph)
library(sf)
setwd('/Users/babak.jfard/windows_Files/structure/intel_core_i5/src')
mort_heat <- read_csv('../data/processed/heat_3Age_groups.csv')
counties <- st_read('/Users/babak.jfard/projects/Datasets/US_counties/CONUS_2019_20m_counties.shx)
counties <- st_read('/Users/babak.jfard/projects/Datasets/US_counties/CONUS_2019_20m_counties.shx')
counties <- st_read('/Users/babak.jfard/projects/Datasets/US_counties/CONUS_2019_20m_counties.shx')
# The first plot to see total numbers of deaths
total <- mort_heat %>% group_by(County_FIPS) %>%
summarise(Total = n())
View(total)
View(counties)
View(counties)
counties_total <- merge(counties, total, by.x="GEOID", by.y="County_FIPS")
counties_total <- merge(counties, total, by.x="GEOID", by.y="County_FIPS", all.x=TRUE)
View(counties_total)
colSums(is.na(counties_total))
3108-322
library(ggiraph)
ggplot(data = counties_total) +
geom_sf_interactive(aes(fill=Total))
ggplot(data = counties_total) +
geom_sf_interactive(aes(fill=Total), size = 0.05)
ggplot()+
# #B2BEB5, #36454F
geom_sf_interactive(data = counties_total, aes(fill=Total), size=0.1, color='#B2BEB5')+
geom_sf(data = state_map, fill=NA, size =0.2, color = 'black')+
theme(strip.text.x = element_text(size = 12))+
theme(legend.key.size = unit(1, 'cm'))+
theme(plot.title = element_text(size = 20, face = "bold", family = "serif", hjust = 0.5),
legend.position = 'bottom',
legend.spacing.x = unit(0.2, 'cm'),
legend.title = element_text(colour="black", size=12, face="bold"),
legend.text = element_text(size=11))
state_map <- st_read('/Users/babak.jfard/projects/Datasets/maps/cb_2018_us_state_20m_CONUS/cb_2018_us_state_20m.shp')
ggplot()+
# #B2BEB5, #36454F
geom_sf_interactive(data = counties_total, aes(fill=Total), size=0.1, color='#B2BEB5')+
geom_sf(data = state_map, fill=NA, size =0.2, color = 'black')+
theme(strip.text.x = element_text(size = 12))+
theme(legend.key.size = unit(1, 'cm'))+
theme(plot.title = element_text(size = 20, face = "bold", family = "serif", hjust = 0.5),
legend.position = 'bottom',
legend.spacing.x = unit(0.2, 'cm'),
legend.title = element_text(colour="black", size=12, face="bold"),
legend.text = element_text(size=11))
rm(list = ls())
library(tidyverse)
library(ggplot2)
library(ggiraph)
library(sf)
setwd('/Users/babak.jfard/windows_Files/structure/intel_core_i5/src')
mort_heat <- read_csv('../data/processed/heat_3Age_groups.csv')
counties <- st_read('/Users/babak.jfard/projects/Datasets/US_counties/CONUS_2019_20m_counties.shp')
state_map <- st_read()
rm(list = ls())
library(tidyverse)
library(ggplot2)
library(ggiraph)
library(sf)
setwd('/Users/babak.jfard/windows_Files/structure/intel_core_i5/src')
mort_heat <- read_csv('../data/processed/heat_3Age_groups.csv')
counties <- st_read('/Users/babak.jfard/projects/Datasets/US_counties/CONUS_2019_20m_counties.shp')
state_map <- st_read('/Users/babak.jfard/projects/Datasets/maps/cb_2018_us_state_20m_CONUS/cb_2018_us_state_20m.shp')
# The first plot to see total numbers of deaths
total <- mort_heat %>% group_by(County_FIPS) %>%
summarise(Total = n())
counties_total <- merge(counties, total, by.x="GEOID", by.y="County_FIPS", all.x=TRUE)
state_map <- st_read('/Users/babak.jfard/projects/Datasets/maps/cb_2018_us_state_20m_CONUS/cb_2018_us_state_20m.shp')
ggplot(data = counties_total) +
geom_sf_interactive(aes(fill=Total), size = 0.05)
ggplot()+
# #B2BEB5, #36454F
geom_sf_interactive(data = counties_total, aes(fill=Total), size=0.1, color='#B2BEB5')+
geom_sf(data = state_map, fill=NA, size =0.2, color = 'black')+
theme(strip.text.x = element_text(size = 12))+
theme(legend.key.size = unit(1, 'cm'))+
theme(plot.title = element_text(size = 20, face = "bold", family = "serif", hjust = 0.5),
legend.position = 'bottom',
legend.spacing.x = unit(0.2, 'cm'),
legend.title = element_text(colour="black", size=12, face="bold"),
legend.text = element_text(size=11))
rm(list = ls())
library(tidyverse)
library(ggplot2)
library(ggiraph)
library(sf)
setwd('/Users/babak.jfard/windows_Files/structure/intel_core_i5/src')
mort_heat <- read_csv('../data/processed/heat_3Age_groups.csv')
counties <- st_read('/Users/babak.jfard/projects/Datasets/US_counties/CONUS_2019_20m_counties.shp')
state_map <- st_read('/Users/babak.jfard/projects/Datasets/maps/cb_2018_us_state_20m_CONUS/cb_2018_us_state_20m.shp')
# The first plot to see total numbers of deaths
total <- mort_heat %>% group_by(County_FIPS) %>%
summarise(Total = n())
counties_total <- merge(counties, total, by.x="GEOID", by.y="County_FIPS", all.x=TRUE)
state_map <- st_read('/Users/babak.jfard/projects/Datasets/maps/cb_2018_us_state_20m_CONUS/cb_2018_us_state_20m.shp')
# ggplot(data = counties_total) +
#  geom_sf_interactive(aes(fill=Total), size = 0.05)
ggplot()+
# #B2BEB5, #36454F
geom_sf_interactive(data = counties_total, aes(fill=Total), size=0.1, color='#B2BEB5')+
geom_sf(data = state_map, fill=NA, size =0.2, color = 'black')+
theme(strip.text.x = element_text(size = 12))+
theme(legend.key.size = unit(1, 'cm'))+
theme(plot.title = element_text(size = 20, face = "bold", family = "serif", hjust = 0.5),
legend.position = 'bottom',
legend.spacing.x = unit(0.2, 'cm'),
legend.title = element_text(colour="black", size=12, face="bold"),
legend.text = element_text(size=11))
rm(list = ls())
library(tidyverse)
library(ggplot2)
library(ggiraph)
library(sf)
setwd('/Users/babak.jfard/windows_Files/structure/intel_core_i5/src')
mort_heat <- read_csv('../data/processed/heat_3Age_groups.csv')
counties <- st_read('/Users/babak.jfard/projects/Datasets/US_counties/CONUS_2019_20m_counties.shp')
state_map <- st_read('/Users/babak.jfard/projects/Datasets/maps/cb_2018_us_state_20m_CONUS/cb_2018_us_state_20m.shp')
# The first plot to see total numbers of deaths
total <- mort_heat %>% group_by(County_FIPS) %>%
summarise(Total = n())
counties_total <- merge(counties, total, by.x="GEOID", by.y="County_FIPS", all.x=TRUE)
state_map <- st_read('/Users/babak.jfard/projects/Datasets/maps/cb_2018_us_state_20m_CONUS/cb_2018_us_state_20m.shp')
ggplot(data = counties_total) +
geom_sf_interactive(aes(fill=Total), size = 0.05, color='#B2BEB5')
# ggplot()+
#   # #B2BEB5, #36454F
#   geom_sf_interactive(data = counties_total, aes(fill=Total), size=0.1, color='#B2BEB5')+
#   geom_sf(data = state_map, fill=NA, size =0.2, color = 'black')+
#   theme(strip.text.x = element_text(size = 12))+
#   theme(legend.key.size = unit(1, 'cm'))+
#   theme(plot.title = element_text(size = 20, face = "bold", family = "serif", hjust = 0.5),
#         legend.position = 'bottom',
#         legend.spacing.x = unit(0.2, 'cm'),
#         legend.title = element_text(colour="black", size=12, face="bold"),
#         legend.text = element_text(size=11))
rm(list = ls())
library(tidyverse)
library(ggplot2)
library(ggiraph)
library(sf)
setwd('/Users/babak.jfard/windows_Files/structure/intel_core_i5/src')
mort_heat <- read_csv('../data/processed/heat_3Age_groups.csv')
counties <- st_read('/Users/babak.jfard/projects/Datasets/US_counties/CONUS_2019_20m_counties.shp')
state_map <- st_read('/Users/babak.jfard/projects/Datasets/maps/cb_2018_us_state_20m_CONUS/cb_2018_us_state_20m.shp')
# The first plot to see total numbers of deaths
total <- mort_heat %>% group_by(County_FIPS) %>%
summarise(Total = n())
counties_total <- merge(counties, total, by.x="GEOID", by.y="County_FIPS", all.x=TRUE)
state_map <- st_read('/Users/babak.jfard/projects/Datasets/maps/cb_2018_us_state_20m_CONUS/cb_2018_us_state_20m.shp')
ggplot(data = counties_total) +
geom_sf_interactive(aes(fill=Total), size = 0.05, color='#B2BEB5')
ggplot(data = counties_total) +
geom_sf_interactive(aes(fill=Total, tooltip= Total), size = 0.05, color='#B2BEB5')
st_write(counties_total, '../data/maps/total_heat.shp')
# I then used ArcGIS onlie to explore the map
unique(mort_heat$Age_Recode27)
# I then used ArcGIS onlie to explore the map
mort_by_age <- mort_heat %>% group_by(c(County_FIPS, Year_CurrentData, Age_Recode27)) %>%
summarise(Total=n())
# I then used ArcGIS onlie to explore the map
mort_by_age <- mort_heat %>% group_by(County_FIPS, Year_CurrentData, Age_Recode27) %>%
summarise(Total=n())
View(mort_by_age)
write_csv(mort_by_age, '../data/processed/heat_year_age.csv')
#  Checking the data that was provided by Jesse Berman
data <- readRDS('/Users/babak.jfard/windows_Files/structure/intel_core_i5/data/interim/heat/external/monthly_weather_airpoll_mort.rds')
View(data)
head(data)
names(data)
unique(data$AgeGr)
unique(data$mean_tmax_normals)
length(unique(data$mean_tmax_normals))
length(data)
dim(data)[1]
dim(data)[1]/37320
unique(data$year)
unique(data$month)
length(unique(data$fips))
library(tidyverse)
names(data)
data %>% filter(month=="01") %>% select(c(fips, mean_tmin_normals))
data %>% filter(month=="01") %>% select(c(fips, mean_tmin_normals))
data_r <- data[, 1:10000]
data_r <- data[ 1:10000,]
unique(data_r$fips)
data_r <- data[ 1:100000,]
unique(data_r$fips)
data_r %>% filter(month == "01") %>% select(c(fips, mean_tmax_normals))
data_r %>% filter(month == "01")
rlang::last_error()
data_r %>% filter(month = "01")
data_r %>% filter(month == "01")
remove.packages(rlang)
remove.packages('rlang')
library(rlang)
library(rlang)
library(tidyverse)
View(data)
View(data)
names(data)
names(data_r)
gc()
# This is to change the format of total populations and the 2000 standard population
# ready for our analysis
library(tidyverse)
`%notin%` <- Negate(`%in%`)
# Standard US population of 2000 in 19 age groups to use in direct age-adjustment method
pop_st_2000 <- read_csv('/Users/babak.jfard/windows_Files/structure/intel_core_i5/data/interim/StdPOP_19ages.csv',
col_names = c('code', 'Age_group', 'population') )
View(pop_st_2000)
# **************************************
# Total county population from 1999 to 2018 from SEER NIH in 19 age groups
pops <- read_csv('/Users/babak.jfard/windows_Files/structure/intel_core_i5/data/interim/populations.csv') %>%
filter(State_Abr %notin% c("AK", "HI"))
View(pops)
unique(pops$Year)
# vvv Functions =====================================================================
#
addCategory <- function(WQS, standards) {
#' Add Category to WQS dataframe based on standards
#'
#' This function merges the summarized WQS dataframe with the Analyte standards.
#' and adds a Category column to the merged dataframe. The Category is determined by
#' comparing Concentration with LDL and MCL values from the standards.
#'
#' @param WQS The input dataframe containing AnalyteCode and Concentration columns.
#' @param standards The standards table containing AnalyteCode, LDL, and MCL columns.
#'
#' @return The merged dataframe with an additional Category column.
#' @import dplyr
merged <- merge(WQS, standards, by = "AnalyteCode", all.x = TRUE)
merged$Category <- ifelse(merged$Concentration < merged$LDL, "No_detect",
ifelse(merged$Concentration <= merged$MCL, "below_MCL", "above_MCL"))
return(merged)
}
setwd('/Users/babak.jfard/projects/EPHTracking')
WQS_file <- 'Data/Water_Data/Summaries_Calculated_20230505.csv'                    # the address of the Water quality summarized file
PWS_file <- 'Data/Water_Data/PWSInventory.csv'                                     # the address of the Water Systems information file
analytes_standards <- 'numbers/analytes_2023.csv'                                  # the address of the csv file containing standards for the analytes
output_PWS_percentage <- 'Data/Water_Data/NCDM_state_level_population.csv'                    # the address of the output csv file for percent of CWS by category
# output_population_affected <- 'Data/Water_Data/NCDM_state_level_population.csv'    # the address of the output csv file for affected population by category
output_PWS_percentage_by_County <- 'Data/Water_Data/NCDM_county_level_population.csv'
WQS <- read_csv(WQS_file)
PWS <- read_csv(PWS_file)
analytes <- read_csv(analytes_standards)
View(WQS)
View(PWS)
names(PWS)
colSums(is.na(PWS))
# Converting MCL for Uranium from pci/l to ug/L (Because it was what supposed to
# do during data preparation)
analytes[analytes['AnalyteCode']==4010, 'MCL'] <- analytes[analytes['AnalyteCode']==4010, 'MCL'] * 1.49
analytes[analytes['AnalyteCode']==4010, 'LDL'] <- analytes[analytes['AnalyteCode']==4010, 'LDL'] * 1.49
# Categorizing each concentration values based on the suggested LDL and MCL from CDC Tracking
categorized_WQS <- addCategory(WQS, analytes)
View(categorized_WQS)
names(categorized_WQS)
# Attaching populations
categorized_WQS <- merge(categorized_WQS, PWS[c('PWSIDNumber', 'SystemPopulation')], by = 'PWSIDNumber', all.x = TRUE)
colSums(is.na(categorized_WQS))
